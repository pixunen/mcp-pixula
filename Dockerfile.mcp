# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /source

# Copy solution and project files
COPY *.sln .
COPY mcp.server/*.csproj mcp.server/
COPY mcp.tools/*.csproj mcp.tools/
COPY mcp.client/*.csproj mcp.client/

# Restore dependencies
RUN dotnet restore

# Copy source code
COPY mcp.server/ mcp.server/
COPY mcp.tools/ mcp.tools/

# Build and publish the server project
WORKDIR /source/mcp.server
RUN dotnet publish -c Release -o /app --no-restore

# Runtime stage  
FROM mcr.microsoft.com/dotnet/aspnet:9.0
WORKDIR /app

# Install Python and UV (modern Python package installer)
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    python3 \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Install UV (modern, fast Python package installer)
RUN pip3 install --break-system-packages uv

# Copy built application from build stage to match expected path structure
COPY --from=build /app ./mcp.server/bin/Release/net9.0/

# Expose the port MCPO will use
EXPOSE 8000

# Use uvx to run mcpo (best practice) with the correct path
CMD ["uvx", "mcpo", "--port", "8000", "--", "dotnet", "/app/mcp.server/bin/Release/net9.0/mcp.server.dll"]
